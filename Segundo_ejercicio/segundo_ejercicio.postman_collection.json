{
	"info": {
		"_postman_id": "7b7d8775-937d-4096-8d50-1d296d35db27",
		"name": "segundo_ejercicio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"docs\": {\r",
							"                    \"type\": \"array\",\r",
							"                     \"properties\": {\r",
							"                         \"_id\": {\"type\": \"string\"},\r",
							"                         \"name\": {\"type\": \"string\"},\r",
							"                     }\r",
							"                },\r",
							"                \"total\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"limit\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"offset\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"page\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"pages\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"docs\",\r",
							"                \"limit\",\r",
							"                \"offset\",\r",
							"                \"page\",\r",
							"                \"pages\",\r",
							"                \"total\"\r",
							"            ],\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate schema\", ()=>{\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://the-one-api.dev/v2/book",
					"protocol": "https",
					"host": [
						"the-one-api",
						"dev"
					],
					"path": [
						"v2",
						"book"
					]
				}
			},
			"response": []
		},
		{
			"name": "Book/ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"docs\": {\r",
							"                    \"type\": \"array\",\r",
							"                     \"properties\": {\r",
							"                         \"_id\": {\"type\": \"string\"},\r",
							"                         \"name\": {\"type\": \"string\"},\r",
							"                     }\r",
							"                },\r",
							"                \"total\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"limit\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"offset\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"page\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"pages\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"docs\",\r",
							"                \"limit\",\r",
							"                \"offset\",\r",
							"                \"page\",\r",
							"                \"pages\",\r",
							"                \"total\"\r",
							"            ],\r",
							"};\r",
							"var json_response = pm.response.json();\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"validate number of documents\", ()=>{\r",
							"    pm.expect(json_response.total).to.eqls(1)\r",
							"});\r",
							"\r",
							"pm.test(\"Validate schema\", ()=>{\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://the-one-api.dev/v2/book/5cf5805fb53e011a64671582",
					"protocol": "https",
					"host": [
						"the-one-api",
						"dev"
					],
					"path": [
						"v2",
						"book",
						"5cf5805fb53e011a64671582"
					]
				}
			},
			"response": []
		}
	]
}